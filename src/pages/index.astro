---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';

const posts = await getCollection('blog');
posts.sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());
const recentPosts = posts.slice(0, 5); // Get 5 most recent posts
---

<Layout title="Welcome to My Blog">
	<div class="welcome">
		<h1>Welcome to My Blog</h1>
		<p>A place where I share my thoughts and experiences.</p>
	</div>
	<div class="recent-posts">
		<h2>Recent Posts</h2>
		<div class="carousel-wrapper">
			<button class="carousel-button prev" aria-label="Previous posts">←</button>
			<div class="carousel">
				<div class="carousel-container">
					{recentPosts.map(post => (
						<article class="post-card">
							<div style={`background-image: ${post.data.grad};`} class="post-image">
							</div>
							<div class="post-content">
								<h3>
									<a href={`/blog/${post.slug}`}>{post.data.title}</a>
								</h3>
								<div class="post-meta">
									<time datetime={post.data.pubDate.toISOString()}>
										{post.data.pubDate.toLocaleDateString('en-UK', 
										{year: 'numeric',
										month: 'long',
										day: 'numeric'})}
									</time>
									<span class="author">by {post.data.author}</span>
								</div>
								<p class="description">{post.data.description}</p>
								<div class="tags">
									{post.data.tags.map(tag => (
										<span class="tag">{tag}</span>
									))}
								</div>
							</div>
						</article>
					))}
				</div>
			</div>
			<button class="carousel-button next" aria-label="Next posts">→</button>
		</div>
	</div>
</Layout>

<script>
	const carousel = document.querySelector('.carousel-container');
	const cards = document.querySelectorAll('.post-card');
	const prevButton = document.querySelector('.prev');
	const nextButton = document.querySelector('.next');
	let currentIndex = 0;

	function updateCarousel() {
		const offset = currentIndex * -100;
		carousel.style.transform = `translateX(${offset}%)`;
		
		// Update button states
		prevButton.style.opacity = currentIndex === 0 ? '0.5' : '1';
		nextButton.style.opacity = currentIndex === cards.length - 1 ? '0.5' : '1';
	}

	prevButton.addEventListener('click', () => {
		if (currentIndex > 0) {
			currentIndex--;
			updateCarousel();
		}
	});

	nextButton.addEventListener('click', () => {
		if (currentIndex < cards.length - 1) {
			currentIndex++;
			updateCarousel();
		}
	});

	// Initialize button states
	updateCarousel();
</script>

<style>
	.welcome {
		text-align: center;
		padding: 2rem 0;
	}

	h1 {
		font-size: 3rem;
		margin-bottom: 1rem;
	}

	.recent-posts {
		margin-top: 3rem;
	}

	h2 {
		color: var(--primary);
		margin-bottom: 2rem;
		text-align: center;
	}

	.carousel-wrapper {
		position: relative;
		padding: 0;
		margin: 0 auto;
		max-width: 800px;
		display: flex;
		align-items: center;
		gap: 1rem;
	}

	.carousel {
		flex: 1;
		position: relative;
		overflow: hidden;
		border-radius: 12px;
	}

	.carousel-container {
		display: flex;
		transition: transform 0.5s ease;
	}

	.post-card {
		flex: 0 0 100%;
		background: var(--secondary);
		border-radius: 12px;
		overflow: hidden;
		box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
	}

	.post-image {
		width: 100%;
		height: 200px;
		overflow: hidden;
		width: 100%;
		height: 100%;
		object-fit: cover;
		transition: transform 0.3s ease;
	}

	.post-card:hover .post-image {
		transform: scale(1.05);
	}

	.post-content {
		padding: 1.5rem;
	}

	.post-card h3 {
		margin: 0;
		font-size: 1.5rem;
	}

	.post-card h3 a {
		color: var(--primary);
		text-decoration: none;
	}

	.post-card h3 a:hover {
		text-decoration: underline;
	}

	.post-meta {
		color: var(--text);
		opacity: 0.8;
		margin: 0.5rem 0;
		font-size: 0.9rem;
	}

	.author {
		margin-left: 1rem;
	}

	.description {
		margin: 1rem 0;
		line-height: 1.6;
	}

	.tags {
		display: flex;
		gap: 0.5rem;
		flex-wrap: wrap;
		margin-top: 1rem;
	}

	.tag {
		background: var(--background);
		color: var(--text);
		padding: 0.25rem 0.75rem;
		border-radius: 1rem;
		font-size: 0.8rem;
	}

	.carousel-button {
		flex: 0 0 auto;
		width: 40px;
		height: 40px;
		background: var(--primary);
		color: var(--background);
		border: none;
		border-radius: 50%;
		font-size: 1.2rem;
		cursor: pointer;
		transition: all 0.3s ease;
		display: flex;
		align-items: center;
		justify-content: center;
		box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
		z-index: 2;
	}

	.carousel-button:hover {
		transform: scale(1.1);
		background: var(--accent);
	}

	.carousel-button:disabled {
		opacity: 0.5;
		cursor: not-allowed;
	}

	@media (max-width: 768px) {
		.carousel-wrapper {
			padding: 0 1rem;
		}

		.carousel-button {
			width: 35px;
			height: 35px;
			font-size: 1rem;
		}
	}
</style>