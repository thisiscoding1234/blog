---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';

const posts = await getCollection('blog');
posts.sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());
const recentPosts = posts.slice(0, 5); // Get 5 most recent posts
---

<Layout title="Welcome to My Blog">
	<div class="welcome">
		<h1>Welcome to My Blog</h1>
		<p>A place where I share my thoughts and experiences.</p>
	</div>
	<div class="recent-posts">
		<h2>Recent Posts</h2>
		<div class="carousel-wrapper">
			<button class="carousel-button prev" aria-label="Previous posts">←</button>
			<div class="carousel">
				<div class="carousel-container">
					{recentPosts.map(post => (
						<article class="post-card">
							<div style={`background-image: ${post.data.grad};`} class="post-image">
							</div>
							<div class="post-content">
								<h3>
									<a href={`/blog/${post.slug}`}>{post.data.title}</a>
								</h3>
								<div class="post-meta">
									<time datetime={post.data.pubDate.toISOString()}>
										{post.data.pubDate.toLocaleDateString('en-UK', 
										{year: 'numeric',
										month: 'long',
										day: 'numeric'})}
									</time>
									<span class="author">by {post.data.author}</span>
								</div>
								<p class="description">{post.data.description}</p>
								<div class="tags">
									{post.data.tags.map(tag => (
										<span class="tag">{tag}</span>
									))}
								</div>
							</div>
						</article>
					))}
				</div>
			</div>
			<button class="carousel-button next" aria-label="Next posts">→</button>
		</div>
	</div>
</Layout>

<script>
	const carousel = document.querySelector('.carousel-container');
	const cards = document.querySelectorAll('.post-card');
	const prevButton = document.querySelector('.prev');
	const nextButton = document.querySelector('.next');
	let currentIndex = 0;

	function updateCarousel() {
		const offset = currentIndex * -100;
		carousel.style.transform = `translateX(${offset}%)`;
		
		// Update button states
		prevButton.style.opacity = currentIndex === 0 ? '0.5' : '1';
		nextButton.style.opacity = currentIndex === cards.length - 1 ? '0.5' : '1';
	}

	prevButton.addEventListener('click', () => {
		if (currentIndex > 0) {
			currentIndex--;
			updateCarousel();
		}
	});

	nextButton.addEventListener('click', () => {
		if (currentIndex < cards.length - 1) {
			currentIndex++;
			updateCarousel();
		}
	});

	// Initialize button states
	updateCarousel();
</script>
